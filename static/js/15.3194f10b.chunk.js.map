{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","reusable/DocsLink.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/notifications/toaster/Toaster.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","React","memo","props","text","rest","href","className","rel","target","_arrayLikeToArray","len","arr2","_toConsumableArray","arrayLikeToArray","iter","Toaster","useState","position","autohide","toasts","setToasts","setPosition","setAutohide","autohideValue","setAutohideValue","closeButton","setCloseButton","fade","setFade","toasters","reduce","toast","sm","lg","variant","id","checked","onChange","e","custom","htmlFor","type","Number","map","key","color","onClick","keys","toasterKey","show"],"mappings":"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","file":"static/js/15.3194f10b.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import React from 'react'\r\nimport { CLink } from '@coreui/react'\r\n\r\nconst DocsLink = props => {\r\n  const {\r\n    name,\r\n    text,\r\n    ...rest\r\n  } = props\r\n\r\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\r\n\r\n  return (\r\n    <div className=\"card-header-actions\">\r\n      <CLink \r\n        {...rest}\r\n        href={href}\r\n        rel=\"noreferrer noopener\" \r\n        target=\"_blank\" \r\n        className=\"card-header-action\"  \r\n      >\r\n        <small className=\"text-muted\">{ text || 'docs' }</small>\r\n      </CLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(DocsLink)","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CToast,\r\n  CToastBody,\r\n  CToastHeader,\r\n  CToaster,\r\n  CForm,\r\n  CInput,\r\n  CInputCheckbox,\r\n  CButton,\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CFormGroup,\r\n  CLabel\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\n\r\nconst Toaster = () => {\r\n\r\n  const positions = [\r\n    'static',\r\n    'top-left',\r\n    'top-center',\r\n    'top-right',\r\n    'top-full',\r\n    'bottom-left',\r\n    'bottom-center',\r\n    'bottom-right',\r\n    'bottom-full'\r\n  ]\r\n\r\n  const [toasts, setToasts] = useState([\r\n    { position: 'static'},\r\n    { position: 'static'},\r\n    { position: 'top-right', autohide: 3000 }\r\n  ])\r\n\r\n  const [position, setPosition] = useState('top-right')\r\n  const [autohide, setAutohide] = useState(true)\r\n  const [autohideValue, setAutohideValue] = useState(5000)\r\n  const [closeButton, setCloseButton] = useState(true)\r\n  const [fade, setFade] = useState(true)\r\n\r\n  const addToast = () => {\r\n    setToasts([\r\n      ...toasts, \r\n      { position, autohide: autohide && autohideValue, closeButton, fade }\r\n    ])\r\n  }\r\n\r\n\r\n  const toasters = (()=>{\r\n    return toasts.reduce((toasters, toast) => {\r\n      toasters[toast.position] = toasters[toast.position] || []\r\n      toasters[toast.position].push(toast)\r\n      return toasters\r\n    }, {})\r\n  })()\r\n\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n        Toasts.\r\n        <DocsLink name=\"-Toast\"/>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n        <CContainer>\r\n          <CRow>\r\n            <CCol sm=\"12\" lg=\"6\">\r\n              <CForm>\r\n                <h5>Add toast with following props:</h5>\r\n\r\n                <CFormGroup variant=\"custom-checkbox\" className=\"my-2 mt-4\">\r\n                  <CInputCheckbox\r\n                    id=\"autohide\"\r\n                    checked={autohide}\r\n                    onChange={e => { setAutohide(e.target.checked) }}\r\n                    custom\r\n                  />\r\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"autohide\">\r\n                    Autohide of the toast\r\n                  </CLabel>\r\n                </CFormGroup>\r\n                {\r\n                  autohide &&\r\n                  <CFormGroup className=\"my-2\">\r\n                    <CLabel htmlFor=\"ccyear\">Time to autohide</CLabel>\r\n                    <CInput\r\n                      type=\"number\"\r\n                      value={autohideValue}\r\n                      onChange={e => {\r\n                        setAutohideValue(Number(e.target.value))\r\n                      }}\r\n                    />\r\n                  </CFormGroup>\r\n                }\r\n\r\n                <CFormGroup className=\"my-2\">\r\n                  <CLabel htmlFor=\"ccyear\">Position</CLabel>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={position}\r\n                    onChange={e => {setPosition(e.target.value)}}\r\n                  >\r\n                    {\r\n                      positions.map((position, i)=>(\r\n                        <option key={i}>{position}</option>\r\n                      ))\r\n                    }\r\n                  </select>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup variant=\"custom-checkbox\" className=\"my-2\">\r\n                  <CInputCheckbox\r\n                    id=\"fade\"\r\n                    checked={fade}\r\n                    onChange={e => { setFade(e.target.checked) }}\r\n                    custom\r\n                  />\r\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"fade\">fade</CLabel>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup variant=\"custom-checkbox\" className=\"my-2\">\r\n                  <CInputCheckbox\r\n                    id=\"close\"\r\n                    custom\r\n                    checked={closeButton}\r\n                    onChange={e=> { setCloseButton(e.target.checked) }}\r\n                  />\r\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"close\">\r\n                    closeButton\r\n                  </CLabel>\r\n                </CFormGroup>\r\n\r\n                <CButton\r\n                  className=\"mr-1 w-25\"\r\n                  color=\"success\"\r\n                  onClick={addToast}\r\n                >\r\n                  Add toast\r\n                </CButton>\r\n\r\n              </CForm>\r\n            </CCol>\r\n            <CCol sm=\"12\" lg=\"6\">\r\n              {Object.keys(toasters).map((toasterKey) => (\r\n                <CToaster\r\n                  position={toasterKey}\r\n                  key={'toaster' + toasterKey}\r\n                >\r\n                  {\r\n                    toasters[toasterKey].map((toast, key)=>{\r\n                    return(\r\n                      <CToast\r\n                        key={'toast' + key}\r\n                        show={true}\r\n                        autohide={toast.autohide}\r\n                        fade={toast.fade}\r\n                      >\r\n                        <CToastHeader closeButton={toast.closeButton}>\r\n                          Toast title\r\n                        </CToastHeader>\r\n                        <CToastBody>\r\n                          {`This is a toast in ${toasterKey} positioned toaster number ${key + 1}.`}\r\n                        </CToastBody>\r\n                      </CToast>\r\n                    )\r\n                  })\r\n                  }\r\n                </CToaster>\r\n              ))}\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Toaster\r\n"],"sourceRoot":""}